@using Microsoft.AspNetCore.Identity
@using TAApplicationPS4.Areas.Identity.Data

@inject SignInManager<TAUser> SignInManager
@inject UserManager<TAUser> UserManager

@{ 

    // Get the role to display on the navbar.
    TAUser user = await UserManager.GetUserAsync(User);
    var role = "Applicant";

    if (user != null)
    {
        if (await UserManager.IsInRoleAsync(user, "Administrator"))
            role = "Admin";
        else if (await UserManager.IsInRoleAsync(user, "Professor"))
            role = "Professor";
    }
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <!-- Display the role and name of the user next to the logout button -->
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">(@role) @UserManager.GetUserName(User)</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
